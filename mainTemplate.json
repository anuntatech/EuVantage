{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the VM, only certain regions support zones during preview."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[concat('vm', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A4_v2",
      "metadata": {
        "description": "Size of the VM: Please select the default size or larger for optimal performance."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "EuVantage",
      "metadata": {
        "description": "Name of the data collector VM"
      }
    },
    "virtualNetworkResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Vnet Resource Group"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Vnet for the data collector VM"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Default",
      "metadata": {
        "description": "Subnet for the data collector VM"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat('diags', uniquestring(resourceGroup().id))]",
    "osDiskVhdUri": "https://euv.blob.core.windows.net/scb-img/scb/abcd.vhd",
    "nicName": "euvScbVMNic",
    "publicIPAddressName": "myPublicIP",
    "networkSecurityGroupName": "nsgEuvSCBAllowSSH",
    "subnetRef": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName'))]",
    "storageProfileeastus2": {
      "imageReference": {
        "id": "[resourceId('Microsoft.Compute/images', 'euv_scb_img_eastus2')]"
      }
    },
    "storageProfilecentralindia": {
      "imageReference": {
        "id": "[resourceId('Microsoft.Compute/images', 'euv_scb_img_centralindia')]"
      }
    },
    "storageProfile2": {
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04-LTS",
        "version": "latest"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Compute/images",
      "apiVersion": "2019-12-01",
      "name": "euv_scb_img_eastus2",
      "location": "[parameters('location')]",
      "condition": "[equals(parameters('location'), 'eastus2')]",
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "osState": "Generalized",
            "blobUri": "[variables('osDiskVhdUri')]",
            "storageAccountType": "Standard_LRS"
          }
        },
        "hyperVGeneration": "V1"
      }
    },
    {
      "type": "Microsoft.Compute/images",
      "apiVersion": "2019-12-01",
      "name": "euv_scb_img_centralindia",
      "location": "[parameters('location')]",
      "condition": "[equals(parameters('location'), 'centralindia')]",
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "osState": "Generalized",
            "blobUri": "[variables('osDiskVhdUriCentralIndia')]",
            "storageAccountType": "Standard_LRS"
          }
        },
        "hyperVGeneration": "V1"
      }
    },
    {
      "apiVersion": "2020-03-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2020-03-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RemoteConnection",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-03-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('publicIPAddressName')]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('storageAccountName')]",
        "[variables('nicName')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "anunta",
          "adminPassword": "pass@123",
          "linuxConfiguration": null
        },
        "storageProfile": "[if(equals(parameters('location'), 'eastus2'), variables(concat('storageProfile', parameters('location'))), variables('storageProfile2'))]",
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    }
  }
}
